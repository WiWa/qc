
(profiling):
stepsize 0.2
N 200
tau_0 0.42
tau_e 31.
dtau 0.42
eta_end 31.5

6/74  7.39802694321
    g time: 16.418684721
    eta time: 2.43604183197
    BCH time: 25.7572813034

(with zeroing):

1/74  8.43723106384
    g time: 3.1917860508
    eta time: 0.676999568939
    BCH time: 4.68950724602

2/74  7.98869299889
    g time: 2.89533376694
    eta time: 0.470031261444
    BCH time: 4.58904743195

5/74  7.72672200203
    g time: 2.72327780724
    eta time: 0.335755825043
    BCH time: 4.53322601318


WTF?
4/74  7.7277610302
        g time: 1.11982750893
        a time: 0.283215761185
        eta time: 0.367708206177
        h time: 0.823571681976
        th time: 1.68276047707
        BCH time: 4.43804454803

(th = total to calc H ~~ a + eta + h)
g time is massive! all its doing is multiplication!

it seems that imaginary multiplication is hard?
put np.complex128 in all np.array so less conversion on the fly?
cvec = np.array(dt * -(1j), np.complex128)
and then multiplying this; much much faster

vectorizing BCH constants helped too!

[performance]
  dtau = 0.42
  N = 19200
  stepsize = 0.25
  [generateU_k with map]
    0/75  -1

    1/75  278.110649109

    2/75  224.268664122

    3/75  144.981609106

    4/75  195.538531065

    5/75  199.715426922

    6/75  133.922813892

    ... 11999 secs

  [generateU_k with repeat]
    0/75  -1

    1/75  130.019052029

    2/75  191.61427021

    3/75  162.758250952

    4/75  152.01434207

    5/75  158.473289013

    6/75  162.708988905
